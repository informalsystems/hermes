#!/usr/bin/env sh

set -eu

# Load lib-gm either from the local folder or from the global $HOME/.gm/bin/lib-gm
SCRIPT_0="${0:-$HOME/.gm/bin/gm}"
export SCRIPT_DIR="${SCRIPT_0%%gm}"
export LOCAL_LIB_GM="${SCRIPT_DIR}lib-gm"
if [ -f "$LOCAL_LIB_GM" ]; then
  . "$LOCAL_LIB_GM"
elif [ -f "$HOME/.gm/bin/lib-gm" ]; then
  . "$HOME/.gm/bin/lib-gm"
else
  echo "ERROR: could not find lib-gm, exiting..."
  exit 1
fi

enforce_requirements

usage() {
  echo "Gaiad Manager $(version)"
  echo
  echo "Usage:"
  echo "  gm <COMMAND> [[<PARAMS>]...]"
  echo
  echo "COMMANDS    DESCRIPTION"
  echo
  echo "help        print this help and exit"
  echo "install     install the script for the local user"
  echo "keys        print the keys of validator nodes"
  echo "log         print the log of a node"
  echo "ports       print the ports of a (running) node"
  echo "start       start one or more nodes (starts all nodes if no parameter is given)"
  echo "status      print the status of nodes"
  echo "stop        stop one or more nodes (stops all nodes if no parameter is given)"
  echo "version     print the application version"
  echo
}

case "${1:-help}" in
  help)
    usage
    ;;
  install)
    install
    ;;
  keys)
    load_config
    if [ $# -eq 1 ]; then
      NODES="$ALL_NODES"
    else
      shift
      NODES="$*"
    fi
    for i in $NODES
    do
      warn_unknown_node "$i" || continue
      list_keys "$i"
    done
    ;;
  log)
    load_config
    shift
    F_FLAG=""
    LIST=""
    while [ "$#" -gt 0 ];
    do
      case "$1" in
        "-f")
          F_FLAG="-f" ;;
        *)
          LIST="$LIST $(get_home_dir "$1")/log"
      esac
      shift
    done
    if [ -z "$F_FLAG" ]; then
      echo "less -R $LIST"
      # Todo: spaces in folder names and file names are not supported yet.
      # shellcheck disable=SC2086
      less -R $LIST
    else
      echo "tail -f $LIST"
      # Todo: spaces in folder names and file names are not supported yet.
      # shellcheck disable=SC2086
      tail -f $LIST
    fi

    ;;
  ports)
    load_config
    if [ $# -eq 1 ]; then
      NODES="$ALL_NODES"
    else
      shift
      NODES="$*"
    fi
    for i in $NODES
    do
      warn_unknown_node "$i" || continue
      ports "$i"
    done
    ;;
  ss)
    # For debug purposes
    # Todo: either make this a supported command or remove it
    lsof -i4:27000-28000 -P
    ;;
  start)
    load_config
    if [ $# -eq 1 ]; then
      NODES_TO_START="$ALL_NODES"
    else
      shift
      NODES_TO_START="$*"
    fi
    for i in $NODES_TO_START
    do
      warn_unknown_node "$i" || continue
      if [ ! -d "$(get_home_dir "$i")" ]; then
        create "$i" || continue
      fi
      if get_auto_maintain_config "$i"; then
        configure "$i"
      fi
      start "$i"
    done
    ;;
  status)
    load_config
    status
    ;;
  stop)
    load_config
    if [ $# -eq 1 ]; then
      NODES_TO_STOP="$ALL_NODES"
    else
      shift
      NODES_TO_STOP="$*"
    fi
    for i in $NODES_TO_STOP
    do
      warn_unknown_node "$i" || continue
      stop "$i"
    done
    ;;
  version)
    version
    exit 0
    ;;
  *)
    usage
    exit_with_error "could not understand the command \"$1\""
    ;;
esac
